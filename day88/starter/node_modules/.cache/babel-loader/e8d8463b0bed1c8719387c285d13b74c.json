{"ast":null,"code":"var _jsxFileName = \"/Users/alexnolla/Desktop/codetrain/git/day88/starter/src/components/Todos/Todos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useReducer, useState, useCallback, Suspense } from 'react';\nimport { PartyContext } from '../../providers/PartyProvider';\nimport { ProfileContext } from '../../providers/ProfileProvider';\nimport { generateRandomTodos } from '../../utils/utils';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport TodoItem from './TodoItem';\nimport styles from './Todos.module.css'; //import Confetti from './Confetti';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Confetti = /*#__PURE__*/React.lazy(_c = () => import('./Confetti'));\n_c2 = Confetti;\n\nconst Todos = () => {\n  _s();\n\n  const [newTodoText, setNewTodoText] = useState('');\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [todos, dispatch] = useReducer(todosReducer, generateRandomTodos(500));\n  const {\n    currentUser\n  } = useContext(ProfileContext);\n  const {\n    animationsEnabled\n  } = useContext(PartyContext);\n  const size = useWindowSize();\n\n  const onAddNewTodo = e => {\n    e.preventDefault();\n    dispatch({\n      type: 'add',\n      // For this demo, we'll use the current timestamp as the id. In a production application, you would use a ID generator to ensure uniqueness.\n      id: Date.now().toString(),\n      text: newTodoText,\n      user: currentUser\n    });\n    setNewTodoText('');\n  };\n\n  const formatTodoText = useCallback((text, index) => {\n    /**Memoize a function */\n    return `${text.toLowerCase()} (${index + 1} of 500)`;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this),\n      children: [\"   \", /*#__PURE__*/_jsxDEV(Confetti, {\n        size: size,\n        showConfetti: showConfetti,\n        setShowConfetti: setShowConfetti\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.newTodoSection,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onAddNewTodo,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newTodo\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"newTodo\",\n            id: \"newTodo\",\n            value: newTodoText,\n            onChange: e => {\n              setNewTodoText(e.target.value);\n            },\n            placeholder: \"What do you have to do today?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: styles.list,\n      children: todos.map((todo, index) => {\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          todo: todo,\n          index: index,\n          formatTodoText: formatTodoText,\n          animationsEnabled: animationsEnabled,\n          setShowConfetti: setShowConfetti,\n          dispatch: dispatch\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todos, \"t0mWSNxDwgvdBvtg9IhgeKxIj90=\", false, function () {\n  return [useWindowSize];\n});\n\n_c3 = Todos;\nexport default Todos;\n\nconst todosReducer = (todos, action) => {\n  switch (action.type) {\n    case 'add':\n      {\n        return [...todos, {\n          id: action.id,\n          text: action.text,\n          done: false,\n          user: action.user\n        }];\n      }\n    // This action is just for demo purposes. Dispatching this action will cause an error to be thrown. The Error Boundary should then appear.\n\n    case 'add-error-todo':\n      {\n        return [...todos, {\n          id: 'bad-todo',\n          text: undefined,\n          done: false,\n          user: action.user\n        }];\n      }\n\n    case 'update':\n      {\n        return todos.map(t => {\n          if (t.id === action.todo.id) {\n            return action.todo;\n          } else {\n            return t;\n          }\n        });\n      }\n\n    case 'delete':\n      {\n        return todos.filter(t => t.id !== action.id);\n      }\n\n    default:\n      {\n        throw Error('Unknown action: ' + action.type);\n      }\n  }\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Confetti$React.lazy\");\n$RefreshReg$(_c2, \"Confetti\");\n$RefreshReg$(_c3, \"Todos\");","map":{"version":3,"sources":["/Users/alexnolla/Desktop/codetrain/git/day88/starter/src/components/Todos/Todos.js"],"names":["React","useContext","useReducer","useState","useCallback","Suspense","PartyContext","ProfileContext","generateRandomTodos","useWindowSize","TodoItem","styles","Confetti","lazy","Todos","newTodoText","setNewTodoText","showConfetti","setShowConfetti","todos","dispatch","todosReducer","currentUser","animationsEnabled","size","onAddNewTodo","e","preventDefault","type","id","Date","now","toString","text","user","formatTodoText","index","toLowerCase","container","newTodoSection","target","value","list","map","todo","action","done","undefined","t","filter","Error"],"mappings":"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","sourcesContent":["import React, { useContext, useReducer, useState, useCallback, Suspense } from 'react';\nimport { PartyContext } from '../../providers/PartyProvider';\nimport { ProfileContext } from '../../providers/ProfileProvider';\nimport { generateRandomTodos } from '../../utils/utils';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport TodoItem from './TodoItem';\nimport styles from './Todos.module.css';\n//import Confetti from './Confetti';\n\nconst Confetti = React.lazy(() => import('./Confetti'))\n\nconst Todos = () => {\n  const [newTodoText, setNewTodoText] = useState('');\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [todos, dispatch] = useReducer(todosReducer, generateRandomTodos(500));\n  const { currentUser } = useContext(ProfileContext);\n  const { animationsEnabled } = useContext(PartyContext);\n  const size = useWindowSize();\n\n  const onAddNewTodo = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: 'add',\n      // For this demo, we'll use the current timestamp as the id. In a production application, you would use a ID generator to ensure uniqueness.\n      id: Date.now().toString(),\n      text: newTodoText,\n      user: currentUser,\n    });\n\n    setNewTodoText('');\n  };\n\n  const formatTodoText = useCallback((text, index) => {          /**Memoize a function */\n    return `${text.toLowerCase()} (${index + 1} of 500)`;\n  },[]);\n\n  return (\n    <div className={styles.container}>\n    <Suspense fallback={<p>Loading...</p>}>   {/** */}\n      <Confetti\n        size={size}\n        showConfetti={showConfetti}\n        setShowConfetti={setShowConfetti}\n      />\n      </Suspense>\n      <section className={styles.newTodoSection}>\n        <form onSubmit={onAddNewTodo}>\n          <label htmlFor='newTodo'>\n            <input\n              type='text'\n              name='newTodo'\n              id='newTodo'\n              value={newTodoText}\n              onChange={(e) => {\n                setNewTodoText(e.target.value);\n              }}\n              placeholder='What do you have to do today?'\n            />\n          </label>\n        </form>\n      </section>\n      <ol className={styles.list}>\n        {todos.map((todo, index) => {\n          return (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              index={index}\n              formatTodoText={formatTodoText}\n              animationsEnabled={animationsEnabled}\n              setShowConfetti={setShowConfetti}\n              dispatch={dispatch}\n            />\n          );\n        })}\n      </ol>\n    </div>\n  );\n};\n\nexport default Todos;\n\nconst todosReducer = (todos, action) => {\n  switch (action.type) {\n    case 'add': {\n      return [\n        ...todos,\n        {\n          id: action.id,\n          text: action.text,\n          done: false,\n          user: action.user,\n        },\n      ];\n    }\n    // This action is just for demo purposes. Dispatching this action will cause an error to be thrown. The Error Boundary should then appear.\n    case 'add-error-todo': {\n      return [\n        ...todos,\n        {\n          id: 'bad-todo',\n          text: undefined,\n          done: false,\n          user: action.user,\n        },\n      ];\n    }\n    case 'update': {\n      return todos.map((t) => {\n        if (t.id === action.todo.id) {\n          return action.todo;\n        } else {\n          return t;\n        }\n      });\n    }\n    case 'delete': {\n      return todos.filter((t) => t.id !== action.id);\n    }\n    default: {\n      throw Error('Unknown action: ' + action.type);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}