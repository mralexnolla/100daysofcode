{"ast":null,"code":"// This file should be ignored. It is used to mock data in this project. You don't have to know how any of this works.\n// Helper function that generates some random todos.\nexport const generateRandomTodos = count => {\n  return Array.from(new Array(count)).map(_ => {\n    return {\n      id: Math.random().toString(36).substring(2),\n      text: getRandomSentence(),\n      done: Math.floor(Math.random() * 2) === 1,\n      user: {\n        name: RANDOM_NAMES[Math.floor(Math.random() * RANDOM_NAMES.length)],\n        icon: RANDOM_ICONS[Math.floor(Math.random() * RANDOM_ICONS.length)]\n      }\n    };\n  });\n};\nconst RANDOM_ICONS = [\"✈️\", \"🌸\", \"🐿\", \"🍣\", \"🐤\", \"🍩\"];\nconst RANDOM_NAMES = [\"Lou\", \"Cecelia\", \"John\", \"Maria\", \"Sabine\"];\nconst nouns = [\"bird\", \"clock\", \"boy\", \"plastic\", \"duck\", \"teacher\", \"old lady\", \"professor\", \"hamster\", \"dog\"];\nconst verbs = [\"kicked\", \"ran\", \"flew\", \"dodged\", \"sliced\", \"rolled\", \"died\", \"breathed\", \"slept\", \"killed\"];\nconst adjectives = [\"beautiful\", \"lazy\", \"professional\", \"lovely\", \"dumb\", \"rough\", \"soft\", \"hot\", \"vibrating\", \"slimy\"];\nconst adverbs = [\"slowly\", \"elegantly\", \"precisely\", \"quickly\", \"sadly\", \"humbly\", \"proudly\", \"shockingly\", \"calmly\", \"passionately\"];\nconst preposition = [\"down\", \"into\", \"up\", \"on\", \"upon\", \"below\", \"above\", \"through\", \"across\", \"towards\"];\n\nconst getRandomSentence = () => {\n  const rand1 = Math.floor(Math.random() * 10);\n  const rand2 = Math.floor(Math.random() * 10);\n  const rand3 = Math.floor(Math.random() * 10);\n  const rand4 = Math.floor(Math.random() * 10);\n  const rand5 = Math.floor(Math.random() * 10);\n  const rand6 = Math.floor(Math.random() * 10);\n  const content = \"The \" + adjectives[rand1] + \" \" + nouns[rand2] + \" \" + adverbs[rand3] + \" \" + verbs[rand4] + \" because some \" + nouns[rand1] + \" \" + adverbs[rand1] + \" \" + verbs[rand1] + \" \" + preposition[rand1] + \" a \" + adjectives[rand2] + \" \" + nouns[rand5] + \" which, became a \" + adjectives[rand3] + \", \" + adjectives[rand4] + \" \" + nouns[rand6] + \".\";\n  return content;\n};","map":{"version":3,"sources":["/Users/alexnolla/Desktop/codetrain/git/day88/starter/src/utils/utils.js"],"names":["generateRandomTodos","count","Array","from","map","_","id","Math","random","toString","substring","text","getRandomSentence","done","floor","user","name","RANDOM_NAMES","length","icon","RANDOM_ICONS","nouns","verbs","adjectives","adverbs","preposition","rand1","rand2","rand3","rand4","rand5","rand6","content"],"mappings":"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","sourcesContent":["// This file should be ignored. It is used to mock data in this project. You don't have to know how any of this works.\n\n// Helper function that generates some random todos.\nexport const generateRandomTodos = (count) => {\n  return Array.from(new Array(count)).map((_) => {\n    return {\n      id: Math.random().toString(36).substring(2),\n      text: getRandomSentence(),\n      done: Math.floor(Math.random() * 2) === 1,\n      user: {\n        name: RANDOM_NAMES[Math.floor(Math.random() * RANDOM_NAMES.length)],\n        icon: RANDOM_ICONS[Math.floor(Math.random() * RANDOM_ICONS.length)],\n      },\n    };\n  });\n};\n\nconst RANDOM_ICONS = [\"✈️\", \"🌸\", \"🐿\", \"🍣\", \"🐤\", \"🍩\"];\n\nconst RANDOM_NAMES = [\"Lou\", \"Cecelia\", \"John\", \"Maria\", \"Sabine\"];\n\nconst nouns = [\n  \"bird\",\n  \"clock\",\n  \"boy\",\n  \"plastic\",\n  \"duck\",\n  \"teacher\",\n  \"old lady\",\n  \"professor\",\n  \"hamster\",\n  \"dog\",\n];\nconst verbs = [\n  \"kicked\",\n  \"ran\",\n  \"flew\",\n  \"dodged\",\n  \"sliced\",\n  \"rolled\",\n  \"died\",\n  \"breathed\",\n  \"slept\",\n  \"killed\",\n];\nconst adjectives = [\n  \"beautiful\",\n  \"lazy\",\n  \"professional\",\n  \"lovely\",\n  \"dumb\",\n  \"rough\",\n  \"soft\",\n  \"hot\",\n  \"vibrating\",\n  \"slimy\",\n];\nconst adverbs = [\n  \"slowly\",\n  \"elegantly\",\n  \"precisely\",\n  \"quickly\",\n  \"sadly\",\n  \"humbly\",\n  \"proudly\",\n  \"shockingly\",\n  \"calmly\",\n  \"passionately\",\n];\nconst preposition = [\n  \"down\",\n  \"into\",\n  \"up\",\n  \"on\",\n  \"upon\",\n  \"below\",\n  \"above\",\n  \"through\",\n  \"across\",\n  \"towards\",\n];\n\nconst getRandomSentence = () => {\n  const rand1 = Math.floor(Math.random() * 10);\n  const rand2 = Math.floor(Math.random() * 10);\n  const rand3 = Math.floor(Math.random() * 10);\n  const rand4 = Math.floor(Math.random() * 10);\n  const rand5 = Math.floor(Math.random() * 10);\n  const rand6 = Math.floor(Math.random() * 10);\n  const content =\n    \"The \" +\n    adjectives[rand1] +\n    \" \" +\n    nouns[rand2] +\n    \" \" +\n    adverbs[rand3] +\n    \" \" +\n    verbs[rand4] +\n    \" because some \" +\n    nouns[rand1] +\n    \" \" +\n    adverbs[rand1] +\n    \" \" +\n    verbs[rand1] +\n    \" \" +\n    preposition[rand1] +\n    \" a \" +\n    adjectives[rand2] +\n    \" \" +\n    nouns[rand5] +\n    \" which, became a \" +\n    adjectives[rand3] +\n    \", \" +\n    adjectives[rand4] +\n    \" \" +\n    nouns[rand6] +\n    \".\";\n\n  return content;\n};\n"]},"metadata":{},"sourceType":"module"}